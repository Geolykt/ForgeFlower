buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven/'}
    }
    dependencies {
        classpath 'net.minecraftforge:gitpatcher:0.10.+'
    }
}
plugins {
    id 'org.ajoberstar.grgit' version '4.0.1'
    id 'com.github.ben-manes.versions' version '0.28.0'
}
apply plugin: 'net.minecraftforge.gitpatcher'

allprojects {
    group = 'net.minecraftforge' //put it under us for now, because this is a unofficial mirrior
    version = gitVersion() // The tag should be OurVersion.FernFlowerCommitNumber, ex: 1.5.380
}
def gitVersion() {
	def raw = grgit.describe(longDescr: true, tags:true)
	def desc = (raw == null ? '0.0-0-unknown' : grgit.describe(longDescr: true, tags:true)).split('-') as List
    def hash = desc.remove(desc.size() - 1)
    def offset = desc.remove(desc.size() - 1)
    def tag = desc.join('-')
    return "${tag}.${offset}"
}

println('Version: ' + version + ' Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

patches {
    submodule = 'FernFlower'
    target = file('ForgeFlower')
    patches = file('FernFlower-Patches')
}
//applyPatches.dependsOn.remove('updateSubmodules') // We don't want to update the submodule without asking. 

project(':ForgeFlower') {
    apply from: rootProject.file('fernflower.gradle')
    compileJava.dependsOn rootProject.tasks.applyPatches
}

project(':ForgeFlower9') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    sourceCompatibility = targetCompatibility = 9
    group = 'net.minecraftforge'
    
    sourceSets {
        java9.java.srcDirs = ['../ForgeFlower/java9']
    }
    
    eclipse {
        project {
            name 'FernFlower9'
            linkedResource name: 'java9', type: '2', location: project(':ForgeFlower').file('java9').getAbsolutePath()
        }
        jdt {
            sourceCompatibility = targetCompatibility = 9
        }
    }
    
    dependencies {
        compile project(':ForgeFlower')
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'utf-8'
        sourceCompatibility = 9
        targetCompatibility = 9
        if (!project.hasProperty('forgeMavenPass')) { //Hack for now until we get Jenkins JDK updated. TEST THINGS LOCALLY
            options.compilerArgs.addAll(['--release', '9'])
        }
    }
}

if (!JavaVersion.current().java9Compatible) {
    println("You must build this with JDK 9")
    System.exit(1)
}
